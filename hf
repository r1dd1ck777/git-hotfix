#!/usr/bin/env ruby

VERSION = '2.0.3'
ROOT_DIR = `ls -l /usr/bin/`.split("\n").detect{|symlink| symlink.include? 'git-hotfix' }.scan(/\->\s(.*)\/hf/)[0][0]
PROJECT_DIR = `pwd`.gsub("\n", '')

# p ROOT_DIR
# p PROJECT_DIR

require 'yaml'
require ROOT_DIR + '/context.rb'
require ROOT_DIR + '/config.rb'
require ROOT_DIR + '/remote.rb'
require ROOT_DIR + '/exec_cli.rb'
require ROOT_DIR + '/actions/deploy_action.rb'
require ROOT_DIR + '/actions/checkout_action.rb'
require ROOT_DIR + '/actions/delete_merged_action.rb'
require ROOT_DIR + '/actions/config_action.rb'
require ROOT_DIR + '/actions/sync_action.rb'
require ROOT_DIR + '/actions/reset_action.rb'
require ROOT_DIR + '/actions/get_action.rb'
require ROOT_DIR + '/actions/st_action.rb'
require ROOT_DIR + '/actions/save_action.rb'
require ROOT_DIR + '/actions/help_action.rb'
require ROOT_DIR + '/actions/init_action.rb'
require ROOT_DIR + '/actions/self_update_action.rb'
require ROOT_DIR + '/actions/run_action.rb'
require ROOT_DIR + '/lib/string.rb'

def run_actions(args, options)
  action = args[0]

  return RunAction.(args, options) if action == 'run' || action == 'r'
  return SaveAction.(args, options) if action == 'save'
  return DeployAction.(args, options) if action == 'deploy'
  return ConfigAction.(args, options) if action == 'config'
  return SyncAction.(args, options) if action == 'sync'
  return DeleteMergedAction.(args, options) if action == 'delete-merged'
  return ResetAction.(args, options) if action == 'reset'
  return GetAction.(args, options) if action == 'get'
  return StAction.(args, options) if action == 'st'
  return SelfUpdateAction.(args, options) if action == 'self-update'
  return InitAction.(args, options) if action == 'init'
  return CheckoutAction.(args, options) if args.count == 1
  return HelpAction.(args, options) if args.count == 0
end

def main
  args = ARGV.select{|arg| arg[0] != '-' || arg.include?(' ') }
  flags = ARGV.select{|arg| arg[0] == '-' && !arg.include?(' ') }
  options = {}
  options[:no_push] = flags.include?('--local') || flags.include?('--l')
  options[:always_commit] = flags.include?('--ac') || flags.include?('--always-commit')
  options[:quiet] = flags.include?('--quiet') || flags.include?('--q')
  options[:yes] = flags.include?('--yes') || flags.include?('--y')
  options[:echo] = flags.include?('--echo')

  response = run_actions(args, options)
  ExecCli.(response, args, options)
end

main()
